# Multi-stage Dockerfile for frontend testing
ARG NODE_VERSION=18

# Test dependencies stage
FROM node:${NODE_VERSION}-alpine as test-deps

# Install system dependencies
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    curl

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with npm ci for consistent builds
RUN npm ci --only=production=false

# Test execution stage
FROM test-deps as test-runner

# Copy application source
COPY . .

# Create directories for test outputs
RUN mkdir -p test-reports coverage

# Set environment variables for testing
ENV NODE_ENV=test
ENV CI=true
ENV GENERATE_SOURCEMAP=false

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Default command for running tests
CMD ["npm", "run", "test:ci"]