# Multi-stage Dockerfile for backend testing
ARG PYTHON_VERSION=3.11

# Test dependencies stage
FROM python:${PYTHON_VERSION}-slim as test-deps

# Install system dependencies for testing
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    postgresql-client \
    poppler-utils \
    tesseract-ocr \
    tesseract-ocr-eng \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy and install Python dependencies
COPY requirements.txt requirements-test.txt ./
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt -r requirements-test.txt

# Test execution stage
FROM test-deps as test-runner

# Copy application code
COPY . .

# Create directories for test outputs
RUN mkdir -p test-reports test_data uploads

# Set environment variables for testing
ENV PYTHONPATH=/app/src
ENV PYTEST_TIMEOUT=300
ENV COVERAGE_FILE=/app/.coverage

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/health')" || exit 1

# Default command for running tests
CMD ["pytest", "tests/", "-v", "--cov=src", "--cov-report=xml", "--cov-report=html", "--junit-xml=test-reports/junit.xml"]